# Created by Octave 5.2.0, Fri May 15 09:40:59 2020 GMT <unknown@LAPTOP-2748II7L>
# name: ans
# type: matrix
# rows: 1
# columns: 2
 4 1


# name: ax
# type: scalar
-938.10400073239953


# name: fis
# type: scalar struct
# ndims: 2
 1 1
# length: 11
# name: name
# type: sq_string
# elements: 1
# length: 11
tempControl


# name: type
# type: sq_string
# elements: 1
# length: 7
mamdani


# name: version
# type: scalar
1


# name: andMethod
# type: sq_string
# elements: 1
# length: 3
min


# name: orMethod
# type: sq_string
# elements: 1
# length: 3
max


# name: impMethod
# type: sq_string
# elements: 1
# length: 3
min


# name: aggMethod
# type: sq_string
# elements: 1
# length: 3
max


# name: defuzzMethod
# type: sq_string
# elements: 1
# length: 8
centroid


# name: input
# type: struct
# ndims: 2
 1 2
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
tempErr



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
tempErrDev





# name: range
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 -5 5



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 -2 2





# name: mf
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: struct
# ndims: 2
 1 5
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
VeryCold



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
Cold



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Mid



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Hot



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
VeryHot





# name: type
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf





# name: params
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 -6 -5 -4 -2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 -4 -2 0



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 -2 0 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 0 2 4



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 2 4 5 6








# name: <cell-element>
# type: struct
# ndims: 2
 1 3
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Neg



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
Zero



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Pos





# name: type
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf





# name: params
# type: cell
# rows: 1
# columns: 3
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 -3 -2 -1 0



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 -1 0 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 0 1 2 3












# name: output
# type: struct
# ndims: 2
 1 2
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
fan



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
peltier





# name: range
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 30 100



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 0 100





# name: mf
# type: cell
# rows: 1
# columns: 2
# name: <cell-element>
# type: struct
# ndims: 2
 1 5
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
VeryLow



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Low



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Mid



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
High



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
VeryHigh





# name: type
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf





# name: params
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 29 30 37 51



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 37 51 65



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 51 65 79



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 65 79 93



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 79 93 100 101








# name: <cell-element>
# type: struct
# ndims: 2
 1 5
# length: 3
# name: name
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
VeryLow



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Low



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 3
Mid



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 4
High



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
VeryHigh





# name: type
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
trimf



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
trapmf





# name: params
# type: cell
# rows: 1
# columns: 5
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 -1 0 10 30



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 10 30 50



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 30 50 70



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 3
 50 70 90



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 4
 70 90 100 101












# name: rule
# type: struct
# ndims: 2
 1 15
# length: 4
# name: antecedent
# type: cell
# rows: 1
# columns: 15
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 2 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 2 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 2 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 3





# name: consequent
# type: cell
# rows: 1
# columns: 15
# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 5



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 5



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 4



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 2 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 1 3



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 2 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 2



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 3 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 4 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 1



# name: <cell-element>
# type: matrix
# rows: 1
# columns: 2
 5 1





# name: weight
# type: cell
# rows: 1
# columns: 15
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1





# name: connection
# type: cell
# rows: 1
# columns: 15
# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1



# name: <cell-element>
# type: scalar
1









# name: in
# type: sq_string
# elements: 1
# length: 5
input


# name: out
# type: sq_string
# elements: 1
# length: 6
output


# name: tra
# type: sq_string
# elements: 1
# length: 6
trapmf


# name: tri
# type: sq_string
# elements: 1
# length: 5
trimf


